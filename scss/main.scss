@charset 'utf-8';

@use "./abstract/functions" as *;
@use "./abstract/mixins" as *;
@use "./abstract/placeholders" as *;
@use "./abstract/variables" as *;

@use "./base/reset" as *;
@use "./base/typography" as *;
@use "./base/colors" as *;
@use "./base/media-query" as *;

@use "./components/buttons" as *;
@use "./components/carousel" as *;
@use "./components/carousel" as *;

@use "./layout/footer" as *;
@use "./layout/forms" as *;
@use "./layout/grid" as *;
@use "./layout/header" as *;
@use "./layout/navigation" as *;
@use "./layout/sidebar" as *;

@use "./pages/menu" as *;
@use "./pages/home" as *;
@use "./pages/menu" as *;

@use "./themes/theme" as *;

:root {
    //fais une map sur la list de colors dans le file
    @each $color, $shades in $colors {
        @each $shade, $value in $shades {
            --clr-#{$color}-#{$shade}: #{$value};
        }
    }
    
    @each $screen-size, $font-size in $type-scales {
        @if $screen-size == small {
            @each $size, $value in $font-size {
                --fs-#{$size}: #{$value};
            } 
        } @else {
            @include mq(small) {
                @each $size, $value in $font-size {
                    --fs-#{$size}: #{$value};
                }
            }
        }
    }
}

//create class with attrib colors x values
@each $color, $shades in $colors {
    @each $shade, $value in $shades {
        .bg-#{$color}-#{$shade} {
            background-color: $value;
        }
    }
}

@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700;900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Shrikhand&display=swap');

body {
    font-family: 'Roboto', sans-serif;
}