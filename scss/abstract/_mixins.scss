/*

.foo {
  color: red;

  @include respond-to('medium') {
    color: blue;
  }
}

*/

/// Responsive breakpoint manager
/// @access public
/// @param {String} $breakpoint - Breakpoint
/// @requires $breakpoints
@mixin respond-to($breakpoint) {
    $raw-query: map-get($breakpoints, $breakpoint);
  
    @if $raw-query {
      $query: if(
        type-of($raw-query) == 'string',
        unquote($raw-query),
        inspect($raw-query)
      );
  
      @media #{$query} {
        @content;
      }
    } @else {
      @error 'No value found for `#{$breakpoint}`. '
           + 'Please make sure it is defined in `$breakpoints` map.';
    }
}

/// FlexBox
/// @acces public
/// @param {String} $direction - direction row, column
/// @param {String} $justify - position justify-content
/// @param {String} $align - Position align-item
/// @param {Int} $gap - gap
/// @require $direction
/// @require $justify
/// @require $align
@mixin flexBox($gap,$direction,$justify,$align) {
  display: flex;
  gap: $gap + 0px;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
}

@mixin allCenter {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
}
